# Generated by Django 3.2.19 on 2023-05-30 13:15

import colorfield.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ингредиент', max_length=50, verbose_name='Ингредиент')),
                ('measurement_unit', models.CharField(help_text='Единица измерения', max_length=50, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиенты',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='IngredientsRecipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(help_text='Необходимое количество', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Необходимое количество')),
                ('ingredients', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients_recipes', to='recipes.ingredients', verbose_name='Ингредиенты')),
            ],
            options={
                'verbose_name': 'Ингредиенты и рецепты',
                'verbose_name_plural': 'Ингредиенты и рецепты',
            },
        ),
        migrations.CreateModel(
            name='Recipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=100, verbose_name='Название')),
                ('image', models.ImageField(help_text='Вкусная картинка', upload_to='recipes/', verbose_name='Вкусная картинка')),
                ('text', models.TextField(help_text='Инструкция к приготовлению', verbose_name='Инструкция к приготовлению')),
                ('coockeng_time', models.PositiveSmallIntegerField(help_text='Инструкция к приготовлению', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Инструкция к приготовлению')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Автор рецепта')),
                ('ingredients', models.ManyToManyField(help_text='Необходимые ингредиенты', related_name='recipes', through='recipes.IngredientsRecipes', to='recipes.Ingredients', verbose_name='Необходимые ингредиенты')),
            ],
            options={
                'verbose_name': 'Рецепты',
                'verbose_name_plural': 'Рецепты',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Теги', max_length=50, verbose_name='Теги')),
                ('color', colorfield.fields.ColorField(default='#FF0000', help_text='Цвет тега', image_field=None, max_length=7, samples=None, verbose_name='Цвет тега')),
                ('slug', models.SlugField(help_text='Теги (кратко)', unique=True, verbose_name='Теги (кратко)')),
            ],
            options={
                'verbose_name': 'Теги',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='TagsRecipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags_recipes', to='recipes.recipes', verbose_name='Рецепты')),
                ('tags', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags_recipes', to='recipes.tags', verbose_name='Теги')),
            ],
            options={
                'verbose_name': 'Теги и рецепты',
                'verbose_name_plural': 'Теги и рецепты',
            },
        ),
        migrations.CreateModel(
            name='ShoppingCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_card', to='recipes.recipes', verbose_name='Рецепты')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_card', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Список покупок',
                'verbose_name_plural': 'Список покупок',
            },
        ),
        migrations.AddField(
            model_name='recipes',
            name='tags',
            field=models.ManyToManyField(help_text='Теги к рецепту', related_name='recipes', through='recipes.TagsRecipes', to='recipes.Tags', verbose_name='Теги к рецепту'),
        ),
        migrations.AddField(
            model_name='ingredientsrecipes',
            name='recipes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients_recipes', to='recipes.recipes', verbose_name='Рецепты'),
        ),
        migrations.CreateModel(
            name='Favorites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='recipes.recipes', verbose_name='Рецепты')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Избранные рецепты',
                'verbose_name_plural': 'Избранные рецепты',
            },
        ),
    ]
